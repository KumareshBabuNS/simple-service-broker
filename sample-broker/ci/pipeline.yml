groups:
- name: all
  jobs:
  - build-broker
  - build-tile
  - claim-pcf
  - deploy-tile
  - test-deploy
  - remove-tile
  - release-pcf
- name: manual
  jobs:
  - claim-pcf
  - manual-release
resources:

- name: version
  type: semver
  source:
    bucket: {{bucket-name}}
    key: current-version
    access_key_id: {{aws-key-id}}
    secret_access_key: {{aws-key}}
    initial_version: 1.0.1

 - name: docker-image
   type: docker-image-resource
   source:
     repository: cfplatformeng
     username: {{docker-username}}
     password: {{docker-password}}

- name: tile-repo
  type: git
  source:
    branch: master
    uri: http://github.com/cf-platform-eng/simple-service-broker

- name: tile-generator-repo
  type: git
  source:
    branch: master
    ignore_paths:
    - sample
    uri: http://github.com/cf-platform-eng/tile-generator.git

- name: pcf-environment
  type: pool
  source:
    branch: master
    pool: pcf
    private_key: {{github-pool-private-key}}
    uri: git@github.com:cf-platform-eng/pipeline-resource-pool

- name: slack-alert
  type: slack-notification
  source:
    url: {{slack-url}}

- name: deploy-tile-log
  type: s3
  source:
    access_key_id: {{aws-key-id}}
    bucket: {{bucket-name}}
    secret_access_key: {{aws-key}}
    versioned_file: deploy-tile-log.txt

- name: test-deploy-log
  type: s3
  source:
    access_key_id: {{aws-key-id}}
    bucket: {{bucket-name}}
    secret_access_key: {{aws-key}}
    versioned_file: test-deploy-log.txt

- name: remove-tile-log
  type: s3
  source:
    access_key_id: {{aws-key-id}}
    bucket: {{bucket-name}}
    secret_access_key: {{aws-key}}
    versioned_file: remove-tile-log.txt

- name: broker-tile
  type: s3
  source:
    access_key_id: {{aws-key-id}}
    bucket: {{bucket-name}}
    regexp: .*-(?P<version>.*)\.pivotal
    secret_access_key: {{aws-key}}

- name: broker-jar
  type: s3
  source:
    access_key_id: {{aws-key-id}}
    bucket: {{bucket-name}}
    regexp: .*-(?P<version>.*)\.jar
    secret_access_key: {{aws-key}}

- name: tile-history
  type: s3
  source:
    access_key_id: {{aws-key-id}}
    bucket: {{bucket-name}}
    regexp: tile\-history-(?P<version>.*)\.yml
    secret_access_key: {{aws-key}}

- name: test-deploy-report
  type: s3
  source:
    access_key_id: {{aws-key-id}}
    bucket: {{bucket-name}}
    regexp: test-deploy-report-(?P<version>.*)\.tgz
    secret_access_key: {{aws-key}}

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

jobs:
- name: build-broker
  serial_groups: [version]
  plan:
  - get: tile-repo
    trigger: true
  - get: version
    params: {bump: patch}
  - task: build-broker
    file: tile-repo/sample-broker/ci/build-broker/task.yml
  - put: broker-jar
    params: {file: broker-jar/*.jar}
  - put: version
    params: {file: version/number}

- name: build-image
  plan:
  - get: tile-repo
  - put: docker-image
    params: {build: tile-repo}

- name: build-tile
  serial_groups: [version]
  plan:
  - aggregate:
    - get: tile-repo
    - get: broker-jar
      trigger: true
      passed:
      - build-broker
    - get: version
    - get: tile-history
  - task: build-tile
    file: tile-repo/sample-broker/ci/build-tile/task.yml
  - put: tile-history
    params:
      file: tile-history-new/*.yml
  - put: broker-tile
    params:
      file: broker-tile/*.pivotal

- name: claim-pcf
  serial_groups: [version]
  plan:
  - aggregate:
    - get: broker-tile
      trigger: true
      passed:
      - build-tile
    - put: pcf-environment
      params:
        acquire: true

- name: deploy-tile
  plan:
  - aggregate:
    - get: tile-generator-repo
    - get: broker-tile
      passed:
      - claim-pcf
      trigger: true
    - get: pcf-environment
      passed:
      - claim-pcf
    - get: tile-repo
  - task: run-deploy-tile
    config:
      platform: linux
      image: docker:///guidowb/tile-pipeline
      run:
        path: tile-repo/ci/deploy-tile/task.sh
        args:
        - tile-generator-repo
        - apigee-tile-repo
        - apigee-tile
        - pcf-environment
      inputs:
      - name: tile-generator-repo
        path: ""
      - name: pcf-environment
        path: ""
      - name: broker-tile
        path: ""
      - name: tile-repo
        path: ""

- name: test-deploy
  plan:
  - aggregate:
    - get: tile-generator-repo
    - get: pcf-environment
      passed:
      - deploy-tile
      trigger: true
    - get: tile-repo
    - get: broker-tile
    - task: test-deploy
      file: tile-repo/ci/test-deploy/task.yml
    on_failure:
      aggregate:
      - put: slack-alert
        params:
          channel: '@jaredgordon'
          icon_emoji: ':robot_face:'
          text: test-deploy failed; check main pipeline
          username: Build pipeline
      - put: pcf-environment
        params:
          release: pcf-environment
    ensure:
      aggregate:
      - put: test-deploy-log
        params:
          file: log/test-deploy-log.txt
      - put: test-deploy-report
        params:
          file: log/test-deploy-report-*.tgz

- name: remove-tile
  plan:
  - aggregate:
    - get: tile-generator-repo
    - get: tile-repo
    - get: pcf-environment
      passed:
      - test-deploy
      trigger: true
    - task: test-deploy
      file: tile-repo/ci/remove-tile/task.yml
    on_failure:
      aggregate:
      - put: slack-alert
        params:
          channel: '@jaredgordon'
          icon_emoji: ':robot_face:'
          text: (1.6) remove-tile failed; check pipeline
          username: Build pipeline
      - put: pcf-environment
        params:
          release: pcf-environment
    ensure:
      put: remove-tile-log
      params:
        file: log/remove-tile-log.txt
  - put: slack-alert
    params:
      channel: '@jaredgordon'
      icon_emoji: ':robot_face:'
      text: Successfully built/deployed/tested/removed new tile
      username: Build pipeline

- name: release-pcf
  serial_groups: [version]
  plan:
  - get: pcf-environment
    passed:
    - remove-tile
    trigger: true
  - get: version
    params: {bump: final}
  - put: pcf-environment
    params:
      release: pcf-environment
  - put: version
    params: {file: version/number}

- name: manual-release
  plan:
  - get: pcf-environment
  - put: pcf-environment
    params:
      release: pcf-environment